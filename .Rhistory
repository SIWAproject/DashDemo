vjust = 0.5,
hjust = 1
)) +
theme(text = element_text(size = 12)) + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
ggplot(h, aes(y = mean ,
x = Group,
text = paste("Num samples:", NumSamples))) +
geom_text(aes(label = histosig, y = 23), hjust = 0) +
geom_bar(aes(fill = ScoreCategory), stat = "identity") +
ylab("Mean Score") + xlab("Group")+
theme(axis.text.x = element_text(
angle = 45,
vjust = 0.5,
hjust = 1
)) +
theme(text = element_text(size = 12)) + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
sig_cecum <- build_sign_table("InflammationSeverity", "Group", "C")
sig_ileum <- build_sign_table("InflammationSeverity", "Group", "I")
sig_cecum
sig_ileum
histo_cecum
histo_cecum_s <- histo_cecum[histo_cecum$ScoreCategory == "InflammationSeverity", ]
histo_ileum_s <- histo_ileum[histo_ileum$ScoreCategory == "InflammationSeverity", ]
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
geom_text(data = cld3, aes(x = Treatment, y = 2.5, label = InflammationSeverity))
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
histo_ileum_s <- dplyr::left_join(histo_ileum_s, sig_ileum, by="Group")
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_text(aes(label = histosig, y = 3), hjust = 0)
histo_ileum_s <- histo_ileum[histo_ileum$ScoreCategory == "InflammationSeverity", ]
sig_ileum <- build_sign_table("InflammationSeverity", "Group", "I")
histo_ileum_s <- dplyr::left_join(histo_ileum_s, sig_ileum, by="Group")
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_text(aes(label = histosig, y = 3), hjust = 0)
View(histo_ileum_s)
histo_ileum_s <- histo_ileum[histo_ileum$ScoreCategory == "InflammationSeverity", ]
sig_ileum
histo_ileum_s
histo_ileum <- dfff_create("I", "Group", c("Group A", "Group B"))
histo_ileum <- dplyr::left_join(histo_ileum, sig_ileum, by="Group")
histo_ileum_s <- histo_ileum[histo_ileum$ScoreCategory == "InflammationSeverity", ]
histo_ileum_s
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_text(aes(label = histosig, y = 3), hjust = 0)
ggplot(histo_ileum_s, aes(y =mean , x = Group)) +
ylab("Mean Ileum Inflammation Severity") + xlab("") +
geom_bar(stat = "identity", fill = '#FFA076')  +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
geom_text(aes(label = histosig, y = 2.5), hjust = 0)
sig_ileum
histo_ileum_s <- dplyr::left_join(histo_ileum_s, sig_ileum, by="Group")
library(tidyr)
n = 20
Type1 <- rnorm(n, mean = 1.3, sd = 1.1)
Type2 <- rnorm(n, mean = 1.5, sd = 1.1)
Type3 <- rnorm(n, mean = 2.5, sd = 1)
Type4 <- rnorm(n, mean = 3, sd = 0.9)
Type5 <- rnorm(n, mean = 2.5, sd = 0.9)
Type6 <- rnorm(n, mean = 1, sd = 0.8)
Type7 <- rnorm(n, mean = 0, sd = 0.8)
df <- data.frame(Type1, Type2, Type3, Type4, Type5, Type6, Type7)
# convert to long format
df_long <- df %>%
pivot_longer(cols = c("Type1", "Type2", "Type3", "Type4", "Type5", "Type6", "Type7"), names_to = c("poop_type"))
df_long$Stool <- if_else(df_long$poop_type %in% c("Type3", "Type4", "Type5"),
"Normal", if_else(df_long$poop_type %in% c("Type1", "Type2"),
"Constipation", "Diarrhea"))
ggplot(df_long, aes(x = poop_type, y = value, color=Stool)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
Type1 <- rnorm(10, mean = 1.3, sd = 1.1)
Type2 <- rnorm(10, mean = 1.5, sd = 1.1)
Type3 <- rnorm(5, mean = 2.5, sd = 1)
df <- data.frame(Type1, Type2, Type3)
Type1 <- rnorm(40, mean = 1.3, sd = 1.1)
Type2 <- rnorm(30, mean = 1.5, sd = 1.1)
Type3 <- rnorm(10, mean = 2.5, sd = 1)
df <- data.frame(Type1, Type2, Type3)
# convert to long format
df_long <- df %>%
pivot_longer(cols = c("Mild", "Moderate", "Type3"), names_to = c("poop_type"))
# convert to long format
df_long <- df %>%
pivot_longer(cols = c("Type1", "Type2", "Type3"), names_to = c("poop_type"))
ggplot(df_long, aes(x = poop_type, y = value)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
Type1 <- rnorm(40, mean = 3, sd = 1.1)
Type2 <- rnorm(30, mean = 3, sd = 1.1)
Type3 <- rnorm(10, mean = 1, sd = 1)
df <- data.frame(Type1, Type2, Type3)
# convert to long format
df_long <- df %>%
pivot_longer(cols = c("Type1", "Type2", "Type3"), names_to = c("poop_type"))
df_long$Stool <- if_else(df_long$poop_type %in% c("Type3", "Type4", "Type5"),
"Normal", if_else(df_long$poop_type %in% c("Type1", "Type2"),
"Constipation", "Diarrhea"))
Type1 <- rnorm(40, mean = 3, sd = 1.1)
Type2 <- rnorm(30, mean = 3, sd = 1.1)
Type3 <- rnorm(10, mean = 1, sd = 1)
df <- data.frame(Type1, Type2, Type3)
Type1
Type2
Type3
df <- rbind(Type1, Type2, Type3)
View(df)
as.data.frame(Type1)
df <- rbind(as.data.frame(Type1), as.data.frame(Type2), as.data.frame(Type3))
Type1 <- rnorm(40, mean = 3, sd = 1.5)
Type2 <- rnorm(30, mean = 3, sd = 1.1)
Type3 <- rnorm(10, mean = 1, sd = 1)
Type3 <- as.data.frame(rnorm(10, mean = 1, sd = 1))
Type1 <- as.data.frame(rnorm(40, mean = 3, sd = 1.5))
Type2 <- as.data.frame(rnorm(30, mean = 3, sd = 1.1))
Type3 <- as.data.frame(rnorm(10, mean = 1, sd = 1))
View(Type1)
Type1 <- as.data.frame(v1=rnorm(40, mean = 3, sd = 1.5))
names(Type1)
names(Type1) <- "values"
names(Type2) <- "values"
names(Type3) <- "values"
rbind(Type1, Type2)
rbind(Type1, Type2, Type3)
do.call(rbind, list(df1 = df1, df2 = df2))
do.call(rbind, list(df1 = Type1, df2 = Type2))
do.call(rbind, list(df1 = Type1, df2 = Type2, df3=Type3))
# convert to long format
df_long <- df %>%
pivot_longer(cols = c("Type1", "Type2", "Type3"), names_to = c("poop_type"))
combine(df1, df2)
combine(Type1, Type2)
dplyr::bind_rows(list(df1 = Type1, df2 = Type2, df3=Type3), .id = 'source')
df_long <- dplyr::bind_rows(list(df1 = Type1, df2 = Type2, df3=Type3), .id = 'source')
ggplot(df_long, aes(x = poop_type, y = value)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
ggplot(df_long, aes(x = source, y = value)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
View(df_long)
ggplot(df_long, aes(x = source, y = values)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
Type1 <- as.data.frame(rnorm(40, mean = 3, sd = 10))
Type2 <- as.data.frame(rnorm(30, mean = 3, sd = 1.1))
Type3 <- as.data.frame(rnorm(10, mean = 1, sd = 1))
names(Type1) <- "values"
names(Type2) <- "values"
names(Type3) <- "values"
df_long <- dplyr::bind_rows(list(df1 = Type1, df2 = Type2, df3=Type3), .id = 'source')
df_long$Stool <- if_else(df_long$poop_type %in% c("Type3", "Type4", "Type5"),
"Normal", if_else(df_long$poop_type %in% c("Type1", "Type2"),
"Constipation", "Diarrhea"))
ggplot(df_long, aes(x = source, y = values)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
Type1 <- as.data.frame(rnorm(40, mean = 3, sd = 1.6))
Type2 <- as.data.frame(rnorm(30, mean = 3, sd = 1.9))
Type3 <- as.data.frame(rnorm(10, mean = 1, sd = 1))
names(Type1) <- "values"
names(Type2) <- "values"
names(Type3) <- "values"
df_long <- dplyr::bind_rows(list(df1 = Type1, df2 = Type2, df3=Type3), .id = 'source')
df_long$Stool <- if_else(df_long$poop_type %in% c("Type3", "Type4", "Type5"),
"Normal", if_else(df_long$poop_type %in% c("Type1", "Type2"),
"Constipation", "Diarrhea"))
ggplot(df_long, aes(x = source, y = values)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
df_long$Stool <- if_else(df_long$source == "Type1",
"Mild", if_else(df_long$source == "Type2",
"Moderate", "Severe"))
df_long$Src <- if_else(df_long$source == "Type1",
"Mild", if_else(df_long$source == "Type2",
"Moderate", "Severe"))
ggplot(df_long, aes(x = source, y = values, color=Src)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
df_long$source
df_long$Src <- if_else(df_long$source == "df1",
"Mild", if_else(df_long$source == "df2",
"Moderate", "Severe"))
ggplot(df_long, aes(x = source, y = values, color=Src)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.2))
ggplot(df_long, aes(x = source, y = values, color=Src)) +
geom_boxplot() +scale_color_cvi_d("bad_good_stool")+
geom_point(position = position_jitter(width = 0.2))
ggplot(df_long, aes(x = source, y = values, color=Src)) +
geom_boxplot() +scale_color_cvi_d("groups")+
geom_point(position = position_jitter(width = 0.2))
ggplot(df_long, aes(x = source, y = values, color=Src)) +
geom_boxplot() +scale_color_cvi_d("groups")+
geom_point(position = position_jitter(width = 0.2)) + ylab("SIWA Microbial Health Score 1")+ xlab("Histopathology score")
ggplot(df_long, aes(x = Src, y = values, color=Src)) +
geom_boxplot() +scale_color_cvi_d("groups")+
geom_point(position = position_jitter(width = 0.2)) + ylab("SIWA Microbial Health Score 1")+ xlab("Histopathology score")
GENE <- complete_sample_table
GENE$KitID <- as.character(GENE$KitID)
GENE <- GENE[GENE$KitID %in% c("72", "73"), ]
diff_geneexp
list_ge_c <- diff_geneexp(GENE, GroupRef = "72", variable= "IL10")
list_ge_i <- diff_geneexp(GENE, GroupRef = "72", variable= "IL10")
list_ge_c
list_ge <- diff_geneexp(GENE, GroupRef = "72", variable= "IL10")
View(GENE)
diff_geneexp
list_ge <- diff_geneexp(GENE, GroupRef = "72", variable= "KitID")
build_sign_table_ge <- function(gene, variable, df_loc){
cat <- paste0("DeltaCq_", gene)
res.aov <-
aov(eval(as.symbol(cat)) ~ eval(as.symbol(variable)), data=df_loc)
tukey <- TukeyHSD(res.aov)
cld <- multcompView::multcompLetters4(res.aov, tukey)
cld_df <- data.frame(letters = cld$`eval(as.symbol(variable))`$Letters)
cld_df[[variable]] <- rownames(cld_df)
names(cld_df)[1] <- "histosig"
return(cld_df)
}
GENE_c <- GENE[GENE$SampleLocation == "C", ]
GENE_i <- GENE[GENE$SampleLocation == "I", ]
GENE$Group <- ifelse(GENE$KitID == "72", "Group A", "Group B")
GENE_c <- GENE[GENE$SampleLocation == "C", ]
GENE_i <- GENE[GENE$SampleLocation == "I", ]
sig_c <- build_sign_table_ge("IL10", "Group", GENE_c)
sig_i <- build_sign_table_ge("IL10", "Group", GENE_i)
View(sig_i)
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
df_i <- dplyr::left_join(GENE_i, sig_i, by="Group")
df_c
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
df_i <- dplyr::left_join(GENE_i, sig_i, by="Group")
df_c
df_c$Location <- "C"
df_i$Location <- "I"
g <- rbind(df_c,df_i)
View(g)
list_ge[["cec"]]
GENE <- complete_sample_table
GENE$KitID <- as.character(GENE$KitID)
GENE <- GENE[GENE$KitID %in% c("72", "73"), ]
GENE$Group <- ifelse(GENE$KitID == "72", "Group A", "Group B")
list_ge <- diff_geneexp(GENE, GroupRef = "72", variable= "KitID")
list_ge <- diff_geneexp(GENE, GroupRef = "Group", variable= "Group A")
GENE$Group <- ifelse(GENE$KitID == "72", "Group A", "Group B")
list_ge <- diff_geneexp(GENE, GroupRef = "Group", variable= "Group A")
list_ge <- diff_geneexp(GENE, GroupRef = "Group A", variable= "Group")
diff_geneexp
ref_value_IL10_i <- mean(GENE_i[GENE_i$KitID == "72",]$DeltaCq_IL10)
ref_value_IL10_c <- mean(GENE_c[GENE_c$KitID == "72",]$DeltaCq_IL10)
ref_value_IL10_i
ref_value_IL10_c
GENE_c$neg_DD_IL10<- -GENE_c$DD_IL10
GENE_i$DD_IL10<-GENE_i$DeltaCq_IL10 - ref_value_IL10_i
GENE_i$neg_DD_IL10<- -GENE_i$DD_IL10
build_sign_table_ge
sig_c <- build_sign_table_ge("IL10", "Group", GENE_c)
sig_i <- build_sign_table_ge("IL10", "Group", GENE_i)
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
df_i <- dplyr::left_join(GENE_i, sig_i, by="Group")
df_c$Location <- "C"
df_i$Location <- "I"
colnames(GENE)
GENE <- GENE[, c("SampleID", "SampleLocation", "DeltaCq_IL10", "DeltaCq_IL1B", "DeltaCq_MUC2", "KitID")]
GENE_c <- GENE[GENE$SampleLocation == "C", ]
GENE_i <- GENE[GENE$SampleLocation == "I", ]
ref_value_IL10_i <- mean(GENE_i[GENE_i$KitID == "72",]$DeltaCq_IL10)
ref_value_IL10_c <- mean(GENE_c[GENE_c$KitID == "72",]$DeltaCq_IL10)
GENE_c$DD_IL10 <- GENE_c$DeltaCq_IL10 - ref_value_IL10_c
GENE_c$neg_DD_IL10<- -GENE_c$DD_IL10
GENE_i$DD_IL10<-GENE_i$DeltaCq_IL10 - ref_value_IL10_i
GENE_i$neg_DD_IL10<- -GENE_i$DD_IL10
View(GENE_i)
sig_c <- build_sign_table_ge("IL10", "Group", GENE_c)
sig_i <- build_sign_table_ge("IL10", "Group", GENE_i)
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
GENE$Group <- ifelse(GENE$KitID == "72", "Group A", "Group B")
GENE_c <- GENE[GENE$SampleLocation == "C", ]
GENE_i <- GENE[GENE$SampleLocation == "I", ]
ref_value_IL10_i <- mean(GENE_i[GENE_i$KitID == "72",]$DeltaCq_IL10)
ref_value_IL10_c <- mean(GENE_c[GENE_c$KitID == "72",]$DeltaCq_IL10)
GENE_c$DD_IL10 <- GENE_c$DeltaCq_IL10 - ref_value_IL10_c
GENE_c$neg_DD_IL10<- -GENE_c$DD_IL10
GENE_i$DD_IL10<-GENE_i$DeltaCq_IL10 - ref_value_IL10_i
GENE_i$neg_DD_IL10<- -GENE_i$DD_IL10
sig_c <- build_sign_table_ge("IL10", "Group", GENE_c)
sig_i <- build_sign_table_ge("IL10", "Group", GENE_i)
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
df_i <- dplyr::left_join(GENE_i, sig_i, by="Group")
df_c$Location <- "C"
df_i$Location <- "I"
g <- rbind(df_c, df_i)
df_i
GENE_c$neg_DD_IL10
GENE_i$neg_DD_IL10
View(g)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")+
geom_text(data = meanscec, aes(label = round(neg_DD_IL10, 2), y = neg_DD_IL10 + 0.2),
position = position_dodge(width = 1),vjust = -0.5, size = 4)+
coord_cartesian(ylim =  c(-1, 3.25))+
geom_text(data = IL10_cec, aes(x = Treatment, y = 3, label = IL10_cec), size = 5)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")+
# geom_text(data = meanscec, aes(label = round(neg_DD_IL10, 2), y = neg_DD_IL10 + 0.2),
#           position = position_dodge(width = 1),vjust = -0.5, size = 4)+
coord_cartesian(ylim =  c(-1, 3.25))+
geom_text(data = IL10_cec, aes(x = Treatment, y = 3, label = IL10_cec), size = 5)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")+
# geom_text(data = meanscec, aes(label = round(neg_DD_IL10, 2), y = neg_DD_IL10 + 0.2),
#           position = position_dodge(width = 1),vjust = -0.5, size = 4)+
#coord_cartesian(ylim =  c(-1, 3.25))
#geom_text(data = IL10_cec, aes(x = Treatment, y = 3, label = IL10_cec), size = 5)
```
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("")
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed")
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
View(g)
sig_c
build_sign_table_ge <- function(gene, variable, df_loc){
cat <- paste0("DeltaCq_", gene)
res.aov <-
aov(eval(as.symbol(cat)) ~ eval(as.symbol(variable)), data=df_loc)
tukey <- TukeyHSD(res.aov)
cld <- multcompView::multcompLetters4(res.aov, tukey)
cld_df <- data.frame(letters = cld$`eval(as.symbol(variable))`$Letters)
cld_df[[variable]] <- rownames(cld_df)
names(cld_df)[1] <- "gensig"
return(cld_df)
}
colnames(GENE)
GENE$Group <- ifelse(GENE$KitID == "72", "Group A", "Group B")
GENE_c <- GENE[GENE$SampleLocation == "C", ]
GENE_i <- GENE[GENE$SampleLocation == "I", ]
ref_value_IL10_i <- mean(GENE_i[GENE_i$KitID == "72",]$DeltaCq_IL10)
ref_value_IL10_c <- mean(GENE_c[GENE_c$KitID == "72",]$DeltaCq_IL10)
GENE_c$DD_IL10 <- GENE_c$DeltaCq_IL10 - ref_value_IL10_c
GENE_c$neg_DD_IL10<- -GENE_c$DD_IL10
GENE_i$DD_IL10<-GENE_i$DeltaCq_IL10 - ref_value_IL10_i
GENE_i$neg_DD_IL10<- -GENE_i$DD_IL10
sig_c <- build_sign_table_ge("IL10", "Group", GENE_c)
sig_i <- build_sign_table_ge("IL10", "Group", GENE_i)
df_c <- dplyr::left_join(GENE_c, sig_c, by="Group")
df_i <- dplyr::left_join(GENE_i, sig_i, by="Group")
df_c$Location <- "C"
df_i$Location <- "I"
g <- rbind(df_c, df_i)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
range_act <- range(range(df_c$neg_DD_IL10), range(df_i$neg_DD_IL10))
dummy <- data.frame(ce = range_act, il = range_act,
variable = "act", stringsAsFactors=FALSE)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
geom_blank(data=dummy)+
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
dummy <- data.frame(ce = range_act, il = range_act,
variable = "C", stringsAsFactors=FALSE)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
geom_blank(data=dummy)+
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2) +geom_blank(data=dummy)
dummy
df_c
df_i
range_act <- range(range(df_c$neg_DD_IL10), range(df_i$neg_DD_IL10))
range_act
dummy <- data.frame(ce = range_act, il = range_act,
variable = "C", stringsAsFactors=FALSE)
dummy
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2) +geom_blank(data=dummy)
dummy <- data.frame(Group = range_act, neg_DD_IL10 = range_act,
variable = "C", stringsAsFactors=FALSE)
dummy
range_act <- range(range(df_c$neg_DD_IL10), range(df_i$neg_DD_IL10))
dummy <- data.frame(Group = range_act, neg_DD_IL10 = range_act,
variable = "C", stringsAsFactors=FALSE)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = 'free', nrow=1,ncol=2) +geom_blank(data=dummy)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = "free_x", nrow=1,ncol=2) + geom_blank(data=dummy)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = "free_x", nrow=1,ncol=2)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2.5), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = "free_y", nrow=1,ncol=2)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 2), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = "free_y", nrow=1, ncol=2)
ggplot(g, aes(x =Group, y = neg_DD_IL10, fill = Group)) +
geom_violin() +
xlab("") +
ylab("Relative gene expression cecum") +  geom_hline(yintercept=0, linetype="dashed") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
geom_text(aes(label = gensig, y = 1), hjust = 0) +
stat_summary(fun=mean, geom="point", size=2, color="red", fill="red")  + facet_wrap(~Location, scales = "free_y", nrow=1, ncol=2)
input_dir <- "/Users/dvarelat/Documents/SIWA/Pets_flex/Input_data/"
df_perf <- read.csv(file=paste0(input_dir, "performance.csv"))
ps <- ggplot(df_perf, aes(x=clr_t, y=FCRbefore, color=I("#606060"))) +
geom_point(show.legend = FALSE) + geom_smooth(method=lm, se=TRUE, color="#075b44") +
xlab("Transformed abundance of Lactobacillus spp") + ylab("IL1B expression") +
theme_light() + theme(legend.position = "none")
ps
